server {
    listen 80;
    listen [::]:80;
    server_name release.brandsystems.com 13.212.229.193;

    # Redirect HTTP to HTTPS except for Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name release.brandsystems.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/release.brandsystems.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/release.brandsystems.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (uncomment after you're confident everything is working)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Logs
    access_log /var/log/nginx/release.brandsystems.com.access.log;
    error_log /var/log/nginx/release.brandsystems.com.error.log;

    # Proxy headers
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Main application - proxy all requests to Node.js
    location / {
        proxy_pass http://localhost:3000;
        proxy_redirect off;
    }

    # Static files
    location /static/ {
        alias /var/www/release.brandsystems.com/public/;
        try_files $uri $uri/ @node;
    }

    # Uploads directory
    location /uploads/ {
        alias /var/www/release.brandsystems.com/public/uploads/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Fallback to Node.js
    location @node {
        proxy_pass http://localhost:3000;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
} 