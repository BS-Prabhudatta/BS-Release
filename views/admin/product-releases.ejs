<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Releases</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <script src="/js/modal.js"></script>
    <style>
        body { 
            font-family: 'Roboto', sans-serif;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        main {
            flex: 1;
        }
        .modal {
            background-color: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(4px);
        }
        .feature-input {
            animation: slideDown 0.2s ease-out;
        }
        @keyframes slideDown {
            from { transform: translateY(-10px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
    </style>
</head>
<body class="bg-gray-100 min-h-screen">
    <!-- Admin Navigation -->
    <nav class="bg-white shadow-sm">
        <div class="container max-w-4xl mx-auto px-6 py-4">
            <div class="flex justify-between items-center">
                <div class="flex items-center space-x-4">
                    <a href="/admin/dashboard" class="text-gray-600 hover:text-gray-900 flex items-center">
                        <i class="ri-arrow-left-line mr-2"></i>
                        <span>Back</span>
                    </a>
                    <h1 class="text-xl font-semibold text-gray-800">Manage Releases: <span id="product-name">Loading...</span></h1>
                </div>
                <form action="/admin/logout" method="POST">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    <button type="submit" 
                            class="px-4 py-2 text-sm text-gray-600 hover:text-gray-900 font-medium">
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </nav>

    <main class="container max-w-4xl mx-auto px-6 py-8">
        <!-- Releases List -->
        <div id="releases-container" class="grid grid-cols-1 gap-6 w-full mx-auto">
            <!-- Loading skeleton -->
            <div class="skeleton bg-white shadow-md p-6 border border-gray-200 rounded-lg">
                <div class="h-6 bg-gray-200 rounded w-1/4 mb-2"></div>
                <div class="h-4 bg-gray-200 rounded w-1/6 mb-4"></div>
                <div class="space-y-2">
                    <div class="h-4 bg-gray-200 rounded w-3/4"></div>
                    <div class="h-4 bg-gray-200 rounded w-2/3"></div>
                </div>
            </div>
        </div>

        <!-- Add Release Button -->
        <div class="mt-8">
            <button onclick="openModal()" 
                    class="bg-white border border-gray-300 text-gray-700 px-4 sm:px-6 py-2 rounded-md hover:bg-gray-50 flex items-center space-x-2 w-full sm:w-auto justify-center">
                <i class="ri-add-line"></i>
                <span>Add New Release</span>
            </button>
        </div>
    </main>

    <footer class="bg-white border-t border-gray-100">
        <div class="container max-w-4xl mx-auto px-4 sm:px-6 py-6">
            <p class="text-center text-gray-500 text-sm">&copy; <%= new Date().getFullYear() %> BrandSystems. All Rights Reserved. Part of the Wellcom Worldwide Group.</p>
        </div>
    </footer>

    <!-- Add Release Modal -->
    <div id="add-release-modal" 
         class="modal fixed inset-0 z-50 flex items-center justify-center hidden">
        <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl mx-4">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-semibold text-gray-800">Add New Release</h2>
            </div>
            
            <form id="add-release-form" class="p-6 space-y-6">
                <div class="grid grid-cols-2 gap-6">
                    <div>
                        <label for="version" class="block text-sm font-medium text-gray-700 mb-1">Version</label>
                        <input type="text" 
                               id="version" 
                               name="version" 
                               required 
                               placeholder="e.g., 2.5.0"
                               class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-600 focus:border-gray-600">
                    </div>
                    <div>
                        <label for="date" class="block text-sm font-medium text-gray-700 mb-1">Release Date</label>
                        <input type="date" 
                               id="date" 
                               name="date" 
                               required 
                               class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-600 focus:border-gray-600">
                    </div>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Features</label>
                    <div id="features-container" class="space-y-3">
                        <div class="feature-input flex items-center space-x-2">
                            <input type="text" 
                                   name="features[]" 
                                   required 
                                   placeholder="Feature title"
                                   class="flex-1 px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-600 focus:border-gray-600">
                            <button type="button" 
                                    onclick="removeFeature(this)"
                                    class="text-gray-500 hover:text-gray-700">
                                <i class="ri-delete-bin-line"></i>
                            </button>
                        </div>
                    </div>
                    <button type="button" 
                            onclick="addFeature()"
                            class="mt-3 text-gray-600 hover:text-gray-600/80 text-sm font-medium flex items-center space-x-1">
                        <i class="ri-add-line"></i>
                        <span>Add Another Feature</span>
                    </button>
                </div>
            </form>

            <div class="px-6 py-4 bg-gray-50 rounded-b-lg flex justify-end space-x-4">
                <button onclick="closeModal()" 
                        class="bg-white border border-gray-300 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-50 flex items-center w-full sm:w-auto justify-center">
                    Cancel
                </button>
                <button onclick="submitRelease()" 
                        class="px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-600/90">
                    Create Release
                </button>
            </div>
        </div>
    </div>

    <script>
        // Get product from URL path
        const pathParts = window.location.pathname.split('/');
        const product = pathParts[pathParts.length - 1];

        // Update product name in header
        document.getElementById('product-name').textContent = 
            product.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');

        // Modal functions
        function openModal() {
            document.getElementById('add-release-modal').classList.remove('hidden');
            // Set today as default date
            document.getElementById('date').valueAsDate = new Date();
        }

        function closeModal() {
            document.getElementById('add-release-modal').classList.add('hidden');
            document.getElementById('add-release-form').reset();
        }

        function addFeature() {
            const container = document.getElementById('features-container');
            const featureDiv = document.createElement('div');
            featureDiv.className = 'feature-input flex items-center space-x-2';
            featureDiv.innerHTML = `
                <input type="text" 
                       name="features[]" 
                       required 
                       placeholder="Feature title"
                       class="flex-1 px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-gray-600 focus:border-gray-600">
                <button type="button" 
                        onclick="removeFeature(this)"
                        class="text-gray-500 hover:text-gray-700">
                    <i class="ri-delete-bin-line"></i>
                </button>
            `;
            container.appendChild(featureDiv);
        }

        function removeFeature(button) {
            const container = document.getElementById('features-container');
            if (container.children.length > 1) {
                button.parentElement.remove();
            }
        }

        async function submitRelease() {
            const form = document.getElementById('add-release-form');
            const version = document.getElementById('version').value;
            const date = document.getElementById('date').value;
            const features = Array.from(form.querySelectorAll('input[name="features[]"]'))
                                .map(input => input.value)
                                .filter(value => value.trim() !== '');

            try {
                const response = await fetch('/admin/api/releases', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector('input[name="_csrf"]').value
                    },
                    body: JSON.stringify({
                        product,
                        version,
                        date,
                        features: features.map(title => ({ title }))
                    })
                });

                if (!response.ok) {
                    throw new Error('Failed to create release');
                }

                // Redirect to the new release page
                window.location.href = `/admin/releases/${product}/${version}`;
            } catch (error) {
                console.error('Error:', error);
                await modal.alert('Failed to create release. Please try again.');
            }
        }

        // Function to create release card
        function createReleaseCard(release) {
            return `
                <div class="bg-white shadow-md p-6 border border-gray-200 rounded-lg hover:shadow-lg transition duration-300">
                    <div class="flex justify-between items-start">
                        <div>
                            <h2 class="text-lg font-semibold text-gray-700">Version ${release.version}</h2>
                            <p class="text-sm text-gray-500 mt-1">${formatDate(release.date)}</p>
                        </div>
                        <div class="flex space-x-2">
                            <button onclick="deleteRelease('${release.version}')"
                                    class="text-gray-600 hover:text-gray-900"
                                    title="Delete Release">
                                <i class="ri-delete-bin-line"></i>
                            </button>
                        </div>
                    </div>
                    <ul class="mt-4 space-y-2 text-base text-gray-700 list-disc list-inside">
                        ${release.features.map(feature => `
                            <li>${feature.title}</li>
                        `).join('')}
                    </ul>
                    <div class="mt-6">
                        <a href="/admin/releases/${product}/${release.version}" 
                           class="inline-flex items-center text-sm font-medium text-primary-600 hover:text-primary-700">
                            View full release
                            <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M9 5l7 7-7 7" />
                            </svg>
                        </a>
                    </div>
                </div>
            `;
        }

        // Function to format date
        function formatDate(dateString) {
            return new Date(dateString).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
        }

        // Fetch and display releases
        async function fetchReleases() {
            try {
                const response = await fetch(`/api/releases/${product}`, {
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                if (!response.ok) {
                    throw new Error('Failed to fetch releases');
                }
                const data = await response.json();
                
                const container = document.getElementById('releases-container');
                if (!data.releases || data.releases.length === 0) {
                    container.innerHTML = `
                        <div class="bg-white shadow-md p-6 border border-gray-200 rounded-lg">
                            <p class="text-gray-500 italic">No releases found.</p>
                        </div>
                    `;
                    return;
                }
                container.innerHTML = data.releases.map(release => createReleaseCard(release)).join('');
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('releases-container').innerHTML = `
                    <div class="bg-red-50 border border-red-200 rounded-lg p-4 text-red-700">
                        Failed to load releases. Please try again later.
                    </div>
                `;
            }
        }

        // Add delete release function
        async function deleteRelease(version) {
            const confirmed = await modal.confirm('Are you sure you want to delete this release? This action cannot be undone.');
            if (!confirmed) return;

            try {
                const response = await fetch(`/admin/api/releases/${product}/${version}`, {
                    method: 'DELETE',
                    headers: {
                        'X-CSRF-Token': document.querySelector('input[name="_csrf"]').value
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to delete release');
                }

                // Refresh the releases list
                await fetchReleases();
                await modal.alert('Release deleted successfully');
            } catch (error) {
                console.error('Error:', error);
                await modal.alert('Failed to delete release: ' + error.message);
            }
        }

        // Load releases when page loads
        fetchReleases();
    </script>
</body>
</html> 